version: '3.7'
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: 'no'
    environment:
      #设置root帐号密码
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    volumes:
      # win
      - D:/zyr/code/data/mysql/data/db:/var/lib/mysql #数据文件挂载
      - D:/zyr/code/data/mysql/data/conf:/etc/mysql/conf.d #配置文件挂载
      - D:/zyr/code/data/mysql/log:/var/log/mysql #日志文件挂载
      # linux
      # - /data/mysql/data/db:/var/lib/mysql #数据文件挂载
      # - /data/mysql/data/conf:/etc/mysql/conf.d #配置文件挂载
      # - /data/mysql/log:/var/log/mysql #日志文件挂载
  # mq消息服务
  rabbitmq:
    image: rabbitmq:3.13.1-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      # win
      - D:/zyr/code/data/rabbitmq/data:/var/lib/rabbitmq
      - D:/zyr/code/data/rabbitmq/log:/var/log/rabbitmq
      # linux
      # - /data/rabbitmq/data:/var/lib/rabbitmq
      # - /data/rabbitmq/log:/var/log/rabbitmq
  # 检索数据库
  elasticsearch:
    image: elasticsearch:7.17.3
    container_name: elasticsearch
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    ports:
      - 9200:9200
      - 9300:9300
    user: root
    environment:
      #设置集群名称为elasticsearch
      - "cluster.name=elasticsearch"
      #以单一节点模式启动
      - "discovery.type=single-node"
       #设置使用jvm内存大小
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
    volumes:
      # win
      - D:/zyr/code/data/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
      - D:/zyr/code/data/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
      # linux
      # - /data/elasticsearch/plugins:/usr/share/elasticsearch/plugins #插件文件挂载
      # - /data/elasticsearch/data:/usr/share/elasticsearch/data #数据文件挂载
  # 日志处理
  logstash:
    image: logstash:7.17.3
    container_name: logstash
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
    ports:
      - 4560:4560
      - 4561:4561
      - 4562:4562
      - 4563:4563
    environment:
      - TZ=Asia/Shanghai
    volumes:
      # win
      - D:/zyr/code/data/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
      # linux
      # - /data/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
    depends_on:
      #kibana在elasticsearch启动之后再启动
      - elasticsearch 
    links:
      #可以用es这个域名访问elasticsearch服务
      - elasticsearch:es 
  # es简述可视化服务
  kibana:
    image: kibana:7.17.3
    container_name: kibana
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    ports:
      - 5601:5601
    links:
      - elasticsearch:es #可以用es这个域名访问elasticsearch服务
    depends_on:
      - elasticsearch #kibana在elasticsearch启动之后再启动
    environment:
      - "elasticsearch.hosts=http://es:9200" #设置访问elasticsearch的地址
  nginx:
    image: nginx:1.22
    container_name: nginx
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    ports:
      - 80:80
    volumes:
      # win
      - D:/zyr/code/data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf #配置文件挂载
      - D:/zyr/code/data/nginx/html:/usr/share/nginx/html #静态资源根目录挂载
      - D:/zyr/code/data/nginx/log:/var/log/nginx #日志文件挂载
      # linux
      # - /data/nginx/conf/nginx.conf:/etc/nginx/nginx.conf #配置文件挂载
      # - /data/nginx/html:/usr/share/nginx/html #静态资源根目录挂载
      # - /data/nginx/log:/var/log/nginx #日志文件挂载
  # nginx代理服务mariadb数据库
  # nginx-db:
  #   image: 'jc21/mariadb-aria:10.11.5'
  #   container_name: "nginx-db"
  #   restart: 'no'
  #   ports:
  #     - "3307:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'npm'
  #     MYSQL_DATABASE: 'npm'
  #     MYSQL_USER: 'npm'
  #     MYSQL_PASSWORD: 'npm'
  #   volumes:
  #     # win
  #     - D:/zyr/code/data/nginx-db/mysql:/var/lib/mysql
  #     # linux
  #     # - /data/nginx-db/mysql:/var/lib/mysql
  # 代理服务
  # nginx-manage:
  #   image: 'jc21/nginx-proxy-manager:2'
  #   container_name: nginx-manage
  #   restart: 'no'
  #   ports:
  #     # These ports are in format <host-port>:<container-port>
  #     - '80:80' # Public HTTP Port
  #     - '443:443' # Public HTTPS Port
  #     - '81:81' # Admin Web Port
  #     # Add any other Stream port you want to expose
  #     # - '21:21' # FTP
  #   environment:
  #     DB_MYSQL_HOST: "nginx-db"
  #     DB_MYSQL_PORT: 3306
  #     DB_MYSQL_USER: "npm"
  #     DB_MYSQL_PASSWORD: "npm"
  #     DB_MYSQL_NAME: "npm"
  #     # Uncomment this if IPv6 is not enabled on your host
  #     # DISABLE_IPV6: 'true'
  #   volumes:
  #     # win
  #     - D:/zyr/code/data/nginx-manage/data:/data
  #     - D:/zyr/code/data/nginx-manage/letsencrypt:/etc/letsencrypt
  #     # linux
  #     # - /data/nginx-manage/data:/data
  #     # - /data/nginx-manage/letsencrypt:/etc/letsencrypt
  #   links:
  #     - nginx-db
  #   depends_on:
  #     - nginx-db
  # 缓存服务
  redis:
    image: redis:7
    container_name: redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    ports:
      - 6379:6379 
    command: redis-server --appendonly yes
    volumes:
      # win
      - D:/zyr/code/data/redis/data:/data
      # linux
      # - /data/redis/data:/data
  # 微服务注册中心
  nacos-registry:
    image: nacos/nacos-server:v2.1.0
    container_name: nacos-registry
    environment:
      - "MODE=standalone"
    ports:
      - 8848:8848
  # nosql数据库可视化服务
  mongo-gui:
    image: ugleiton/mongo-gui
    container_name: "mongo-gui"
    restart: 'no'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    ports:
      - "4321:4321"
    environment:
      # mongodb为默认数据库；mongo-db为容器名称
      - MONGO_URL=mongodb://mongodbUsername:mongodbPassword@mongo-db:27017
    links:
      - mongo-db
    depends_on:
      - mongo-db
  # nosql数据库    
  mongo-db:
    image: 'mongo:5.0'
    container_name: "mongo-db"
    restart: 'no'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    ports:
      - '27017:27017'
    expose:
      - '27017'
    volumes:
      # win
      - D:/zyr/code/data/mongodb:/data/db
      #linux
      # - /data/mongodb:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodbUsername
      MONGO_INITDB_ROOT_PASSWORD: mongodbPassword
      MONGO_INITDB_DATABASE: mongoDatabase
volumes:
  mongodb: {}